classes:
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.mcp.apt_mirantis.ubuntu
- system.linux.system.repo_local.mcp.apt_mirantis.elastic
- system.linux.system.repo_local.mcp.apt_mirantis.saltstack
- system.linux.system.repo_local.mcp.apt_mirantis.sensu
{%- else %}
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.mcp.apt_mirantis.ubuntu
- system.linux.system.repo.mcp.apt_mirantis.elastic
- system.linux.system.repo.mcp.apt_mirantis.saltstack
- system.linux.system.repo.mcp.apt_mirantis.sensu
{%- endif %}
- system.elasticsearch.server.cluster
- system.haproxy.proxy.listen.elasticsearch
- service.haproxy.proxy.single
- system.keepalived.cluster.instance.stacklight_log_vip
- cluster.{{ cookiecutter.cluster_name }}.infra
{%- if cookiecutter.use_default_network_scheme != 'False' %}
- cluster.{{ cookiecutter.cluster_name }}.stacklight.networking.virtual
{%- endif %}
parameters:
  _param:
    keepalived_stacklight_log_vip_address: ${_param:stacklight_log_address}
    keepalived_stacklight_log_vip_password: ${_param:stacklight_log_keepalived_password}
    keepalived_stacklight_log_vip_interface: ens3
    cluster_vip_address: ${_param:stacklight_log_address}
    cluster_local_address: ${_param:single_address}
    cluster_node01_hostname: ${_param:stacklight_log_node01_hostname}
    cluster_node01_address: ${_param:stacklight_log_node01_address}
    cluster_node02_hostname: ${_param:stacklight_log_node02_hostname}
    cluster_node02_address: ${_param:stacklight_log_node02_address}
    cluster_node03_hostname: ${_param:stacklight_log_node03_hostname}
    cluster_node03_address: ${_param:stacklight_log_node03_address}
  elasticsearch:
    server:
      master: true
      data: true
