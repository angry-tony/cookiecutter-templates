{%- macro password(size=16) -%}
{% for index in range(size) %}{{ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'|random }}{% endfor %}
{%- endmacro %}
classes:
- system.linux.system.single
- system.linux.system.single.debian
#- system.openssh.server.team.lab
#- system.openssh.server.team.presales
#- system.openssh.server.team.services
#- system.openssh.server.team.networking
#- system.openssh.server.team.stacklight
- system.rsyslog.client.single
{%- if cookiecutter.kubernetes_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.kubernetes
{%- endif %}
{%- if cookiecutter.openstack_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.openstack
{%- endif %}
{%- if cookiecutter.opencontrail_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.opencontrail
{%- endif %}
{%- if cookiecutter.stacklight_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.stacklight
{%- if cookiecutter.stacklight_version == '1' %}
- cluster.{{ cookiecutter.cluster_name }}.stacklight.client
{%- endif %}
{%- if cookiecutter.stacklight_version == '2' %}
{%- if cookiecutter.fluentd_enabled == 'True' %}
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo.mcp.apt_mirantis.fluentd
- system.linux.system.repo.mcp.apt_mirantis.openstack
{%- else %}
- system.linux.system.repo_local.mcp.apt_mirantis.fluentd
- system.linux.system.repo_local.mcp.apt_mirantis.openstack
{%- endif %}
- system.fluentd
- system.fluentd.label.default_metric
- system.fluentd.label.default_metric.prometheus
- system.fluentd.label.default_output.elasticsearch
- system.fluentd.label.default_output.drop_event
{%- else %}
- system.heka.log_collector.single
- system.heka.log_collector.output.telegraf
{%- endif %}
- system.telegraf.agent
- system.prometheus.collector
- service.grafana.collector
{%- endif %}
{%- endif %}
{%- if cookiecutter.oss_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name}}.oss
{%- endif %}
{%- if cookiecutter.get('ceph_enabled', 'False') == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.ceph
{%- endif %}
{%- if cookiecutter.cicd_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.cicd
{%- endif %}
#- cluster.{{ cookiecutter.cluster_name }}.infra.proxy
parameters:
  _param:
    # Don't set it "false" before you configure sudo policies and enable power users.
    linux_system_user_sudo: true

    apt_mk_version: {{ cookiecutter.mcp_version }}

    {%- if cookiecutter.mcp_version != 'stable' and cookiecutter.mcp_version != 'testing' and cookiecutter.mcp_version != 'nightly' %}
    jenkins_pipelines_branch: refs/tags/{{ cookiecutter.mcp_version }}
    {%- else %}
    jenkins_pipelines_branch: master
    {%- endif %}

    {%- if cookiecutter.kubernetes_enabled != 'True' %}
    {%- if cookiecutter.get('offline_deployment', 'False') == 'True' %}
    salt_control_trusty_image: http://${_param:aptly_server_hostname}:8078/images/ubuntu-14-04-x64-mcp${_param:apt_mk_version}.qcow2
    salt_control_xenial_image: http://${_param:aptly_server_hostname}:8078/images/ubuntu-16-04-x64-mcp${_param:apt_mk_version}.qcow2
    {%- else %}
    salt_control_trusty_image: http://images.mirantis.com/ubuntu-14-04-x64-mcp${_param:apt_mk_version}.qcow2
    salt_control_xenial_image: http://images.mirantis.com/ubuntu-16-04-x64-mcp${_param:apt_mk_version}.qcow2
    {%- endif %}
    {%- endif %}

    {%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
    local_repos: true
    aptly_server_hostname: {{ cookiecutter.aptly_server_hostname }}
    aptly_server_deploy_address: {{ cookiecutter.aptly_server_deploy_address }}
    aptly_server_control_address: {{ cookiecutter.aptly_server_control_address }}
    local_repo_url: {{ cookiecutter.local_repo_url}}
    linux_repo_refresh_db: true
    {%- if cookiecutter.get('local_docker_images', 'False') == 'True' %}
    docker_compose_image: ${_param:aptly_server_hostname}:5000/compose:1.8.0
    {%- endif %}
    {%- endif %}
    infra_config_hostname: {{ cookiecutter.salt_master_hostname }}
    salt_minion_ca_host: ${_param:infra_config_hostname}.${_param:cluster_domain}
    # infra service addresses
    infra_config_address: {{ cookiecutter.salt_master_address }}
    infra_config_deploy_address: {{ cookiecutter.salt_master_management_address }}

    cluster_domain: {{ cookiecutter.cluster_domain }}
    cluster_name: {{ cookiecutter.cluster_name }}
    {%- if cookiecutter.openstack_enabled == 'True' %}
    cluster_public_host: {{ cookiecutter.public_host }}
    {%- endif %}

    control_network_netmask: {{ cookiecutter.control_network_netmask }}
    tenant_network_netmask: {{ cookiecutter.tenant_network_netmask }}

    dns_server01: {{ cookiecutter.dns_server01 }}
    dns_server02: {{ cookiecutter.dns_server02 }}

    {%- if cookiecutter.opencontrail_enabled == 'True' %}
    tenant_network_gateway: {{ cookiecutter.tenant_network_gateway }}
    {%- endif %}

    {%- if cookiecutter.deployment_type == 'physical' %}
    control_vlan: {{ cookiecutter.control_vlan }}
    tenant_vlan: {{ cookiecutter.tenant_vlan }}

    deploy_network_netmask: {{ cookiecutter.deploy_network_netmask }}
    deploy_network_gateway: {{ cookiecutter.deploy_network_gateway }}

    # MaaS parameters
    infra_maas_node01_deploy_address: ${_param:infra_config_deploy_address}
    infra_maas_node01_hostname: ${_param:infra_config_hostname}
    maas_admin_username: mirantis
    maas_admin_password: {{ password(16) }}
    maas_db_password: {{ password(16) }}

    {%- if cookiecutter.openstack_enabled == 'True' or (cookiecutter.kubernetes_enabled == 'True' and (cookiecutter.stacklight_enabled == 'True' or cookiecutter.cicd_enabled == 'True')) %}
    infra_kvm_address: {{ cookiecutter.infra_kvm_vip_address }}
    infra_kvm_node01_address: {{ cookiecutter.infra_kvm01_control_address }}
    infra_kvm_node02_address: {{ cookiecutter.infra_kvm02_control_address }}
    infra_kvm_node03_address: {{ cookiecutter.infra_kvm03_control_address }}
    infra_kvm_node01_deploy_address: {{ cookiecutter.infra_kvm01_deploy_address }}
    infra_kvm_node02_deploy_address: {{ cookiecutter.infra_kvm02_deploy_address }}
    infra_kvm_node03_deploy_address: {{ cookiecutter.infra_kvm03_deploy_address }}
    infra_kvm_node01_hostname: {{ cookiecutter.infra_kvm01_hostname }}
    infra_kvm_node02_hostname: {{ cookiecutter.infra_kvm02_hostname }}
    infra_kvm_node03_hostname: {{ cookiecutter.infra_kvm03_hostname }}

    glusterfs_node01_address: ${_param:infra_kvm_node01_address}
    glusterfs_node02_address: ${_param:infra_kvm_node02_address}
    glusterfs_node03_address: ${_param:infra_kvm_node03_address}
    {%- endif %}
    {%- endif %}

    {%- if cookiecutter.get('static_ips_on_deploy_network_enabled', 'False') == 'True' %}
    linux_deploy_interface:
      enabled: true
      type: eth
      proto: static
      address: ${_param:deploy_address}
      netmask: ${_param:deploy_network_netmask}
      gateway: ${_param:deploy_network_gateway}
      ipflush_onchange: true
      restart_on_ipflush: true
    {%- else %}
    linux_dhcp_interface:
      enabled: true
      type: eth
      proto: dhcp
    {%- endif %}
    linux_single_interface:
      enabled: true
      type: eth
      proto: static
      address: ${_param:single_address}
      netmask: ${_param:control_network_netmask}
      name_servers:
        - ${_param:dns_server01}
        - ${_param:dns_server02}

  salt:
    minion:
      trusted_ca_minions:
        - ${_param:salt_minion_ca_host}

  linux:
    network:
      dhclient:
        {%- if cookiecutter.get('static_ips_on_deploy_network_enabled', 'False') == 'True' %}
        enabled: false
        {%- else %}
        enabled: true
        request:
          - subnet-mask
          - broadcast-address
          - time-offset
          - routers
          - domain-name
          - domain-name-servers
          - domain-search
          - host-name
          - dhcp6.name-servers
          - dhcp6.domain-search
          - dhcp6.fqdn
          - dhcp6.sntp-servers
          - netbios-name-servers
          - netbios-scope
          - interface-mtu
          - rfc3442-classless-static-routes
        {%- endif %}
      host:
        hostname:
          address: ${_param:single_address}
          names:
          - ${linux:network:hostname}
          - ${linux:network:fqdn}
        cfg01:
          address: ${_param:infra_config_address}
          names:
          - ${_param:infra_config_hostname}
          - ${_param:infra_config_hostname}.${_param:cluster_domain}
        cfg:
          address: ${_param:infra_config_address}
          names:
          - cfg
          - cfg.${_param:cluster_domain}
        {%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
        apt:
          address: ${_param:aptly_server_deploy_address}
          names:
          - ${_param:aptly_server_hostname}
          - ${_param:aptly_server_hostname}.${_param:cluster_domain}
        {%- endif %}
        {%- if cookiecutter.deployment_type == 'physical' %}
        {%- if cookiecutter.openstack_enabled == 'True' or (cookiecutter.kubernetes_enabled == 'True' and (cookiecutter.stacklight_enabled == 'True' or cookiecutter.cicd_enabled == 'True')) %}
        kvm01:
          address: ${_param:infra_kvm_node01_address}
          names:
          - ${_param:infra_kvm_node01_hostname}
          - ${_param:infra_kvm_node01_hostname}.${_param:cluster_domain}
        kvm02:
          address: ${_param:infra_kvm_node02_address}
          names:
          - ${_param:infra_kvm_node02_hostname}
          - ${_param:infra_kvm_node02_hostname}.${_param:cluster_domain}
        kvm03:
          address: ${_param:infra_kvm_node03_address}
          names:
          - ${_param:infra_kvm_node03_hostname}
          - ${_param:infra_kvm_node03_hostname}.${_param:cluster_domain}
        {%- endif %}
        {%- endif %}
    system:
      {%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
      apt:
        config:
          nosrvrecords:
            'Acquire::EnableSrvRecords': 'false'
      {%- endif %}
      name: ${_param:infra_config_hostname}
      domain: ${_param:cluster_domain}
      {%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
      local_repos: ${_param:local_repos}
      purge_repos: True
      {%- endif %}
      service:
        apt-daily.timer:
          status: dead
