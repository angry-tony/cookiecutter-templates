classes:
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.mcp.apt_mirantis.docker_legacy
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.mcp.apt_mirantis.ubuntu
- system.linux.system.repo_local.mcp.apt_mirantis.saltstack
{%- else %}
- system.linux.system.repo.mcp.apt_mirantis.docker_legacy
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.mcp.apt_mirantis.ubuntu
- system.linux.system.repo.mcp.apt_mirantis.saltstack
{%- endif %}
- system.kubernetes.pool.cluster
- system.salt.minion.cert.k8s_client
- system.salt.minion.cert.etcd_client
{%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.opencontrail.compute
{%- endif %}
{%- if cookiecutter.use_default_network_scheme != 'False' %}
- cluster.{{ cookiecutter.cluster_name }}.kubernetes.networking.compute
{%- endif %}
- cluster.{{ cookiecutter.cluster_name }}.infra

parameters:
  _param:
    {%- if cookiecutter.get('local_docker_images', 'False') == 'True' %}
    kubernetes_externaldns_image: ${_param:aptly_server_hostname}:5000/external-dns:${_param:apt_mk_version}
    kubernetes_hyperkube_repo: ${_param:aptly_server_hostname}:5000
    kubernetes_netchecker_agent_repo: ${_param:aptly_server_hostname}:5000
    kubernetes_netchecker_server_repo: ${_param:aptly_server_hostname}:5000
    {%- if cookiecutter.kubernetes_network_calico_enabled == 'True' %}
    kubernetes_calico_calicoctl_repo: ${_param:aptly_server_hostname}:5000
    kubernetes_calico_repo: ${_param:aptly_server_hostname}:5000
    kubernetes_calico_cni_repo: ${_param:aptly_server_hostname}:5000
    {%- endif %}
    {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
    kubernetes_contrail_cni_repo: ${_param:aptly_server_hostname}:5000
    kubernetes_contrail_network_controller_repo: ${_param:aptly_server_hostname}:5000
    {%- endif %}
    {%- else %}
    {%- if cookiecutter.mcp_version != 'nightly' %}
    kubernetes_externaldns_image: docker-prod-local.docker.mirantis.net/mirantis/external/external-dns:{_param:apt_mk_version}
    {%- else %}
    kubernetes_externaldns_image: docker-prod-local.docker.mirantis.net/mirantis/external/external-dns:latest
    {%- endif %}
    {%- endif %}
  docker:
    host:
      pkgs:
        - docker-engine=1.12.6-0~ubuntu-xenial
        - python-docker
  kubernetes:
    pool:
      network:
        {%- if cookiecutter.kubernetes_network_calico_enabled == 'True' %}
        calico:
          enabled: true
          no_default_pools: {{ cookiecutter.calico_no_default_pools }}
          etcd:
            ssl:
              enabled: {{ cookiecutter.etcd_ssl }}
          image: ${_param:kubernetes_calico_image}
          calicoctl_image: ${_param:kubernetes_calico_calicoctl_image}
          cni_image: ${_param:kubernetes_calico_cni_image}
          {%- if cookiecutter.stacklight_enabled == 'True' %}
          prometheus:
            enabled: true
          {%- endif %}
        {%- endif %}
        {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
        opencontrail:
          enabled: true
          config:
            api:
              host: ${_param:opencontrail_control_address}
        {%- endif %}
    common:
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
  linux:
    system:
      package:
        docker-engine:
          version: 1.12.6-0~ubuntu-xenial
          hold: true
      kernel:
        sysctl:
          # The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions.
          vm.max_map_count: 262144
