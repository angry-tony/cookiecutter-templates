classes:
- service.etcd.server.cluster
- system.haproxy.proxy.listen.kubernetes.apiserver
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.docker_legacy
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.mcp.apt_mirantis.ubuntu
- system.linux.system.repo_local.mcp.apt_mirantis.saltstack
{%- else %}
- system.linux.system.repo.docker_legacy
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.mcp.apt_mirantis.ubuntu
- system.linux.system.repo.mcp.apt_mirantis.saltstack
{%- endif %}
- system.salt.minion.cert.etcd_server
- system.salt.minion.cert.etcd_client
- system.salt.minion.cert.k8s_client
- system.kubernetes.master.cluster
{%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
- system.kubernetes.pool.cluster
{%- else %}
- cluster.{{ cookiecutter.cluster_name }}.kubernetes.compute
{%- endif %}
parameters:
  _param:
    keepalived_vip_interface: {{ cookiecutter.kubernetes_keepalived_vip_interface }}
    keepalived_vip_virtual_router_id: 65
  etcd:
    server:
      source:
        engine: docker_hybrid
      ssl:
        enabled: {{ cookiecutter.etcd_ssl }}
      {%- if cookiecutter.kubernetes_network_calico_enabled == 'True' %}
      setup:
        calico:
          key: /calico/v1/ipam/v4/pool/${_param:calico_private_network}-${_param:calico_private_netmask}
          value: '{"masquerade":{{ cookiecutter.calico_enable_nat|lower }},"cidr":"${_param:calico_private_network}/${_param:calico_private_netmask}"}'
          # if IP-in-IP is required
          # value: '{"ipip":"tunl0","ipip_mode":"always","ipam":true,"disabled":false, "masquerade":{{ cookiecutter.calico_enable_nat|lower }},"cidr":"${_param:calico_private_network}/${_param:calico_private_netmask}"}'
      {%- endif %}
  kubernetes:
    {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
    pool:
      network:
        engine: none
        opencontrail:
          enabled: false
      kubelet:
        fail_on_swap: false
    {%- endif %}
    master:
      etcd:
        ssl:
          enabled: {{ cookiecutter.etcd_ssl }}
      network:
        {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
        engine: none
        {%- endif %}
        {%- if cookiecutter.kubernetes_network_calico_enabled == 'True' %}
        calico:
          enabled: true
          etcd:
            ssl:
              enabled: {{ cookiecutter.etcd_ssl }}
          {%- if cookiecutter.stacklight_enabled == 'True' %}
          prometheus:
            enabled: true
          {%- endif %}
        {%- endif %}
        {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
        opencontrail:
          enabled: true
          public_ip_range: {{ cookiecutter.opencontrail_public_ip_range }}
          public_network: {{ cookiecutter.get('opencontrail_public_ip_network', 'default-domain:default-project:Public') }}
          private_ip_range: {{ cookiecutter.opencontrail_private_ip_range }}
          config:
            api:
              host: ${_param:opencontrail_control_address}
        {%- endif %}
      namespace:
        netchecker:
          enabled: true
    common:
      addons:
        {%- if cookiecutter.get('kubernetes_externaldns_enabled', 'False') == 'True' %}
        externaldns:
          enabled: {{ cookiecutter.kubernetes_externaldns_enabled }}
          namespace: kube-system
          image: ${_param:kubernetes_externaldns_image}
          domain: ${_param:kubernetes_cluster_domain}
          provider: {{ cookiecutter.kubernetes_externaldns_provider }}
        {%- endif %}
        netchecker:
          enabled: true
        helm:
          enabled: false
      {%- if cookiecutter.kubernetes_network_opencontrail_enabled == 'True' %}
        dashboard:
          enabled: False
        contrail_network_controller:
          namespace: kube-system
          enabled: true
          image: ${_param:kubernetes_contrail_network_controller_image}
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
      {%- endif %}
