{%- macro password(size=16) -%}
{% for index in range(size) %}{{ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'|random }}{% endfor %}
{%- endmacro -%}
classes:
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.ubuntu
- system.linux.system.repo_local.mcp.openstack
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.mcp.salt
{%- if cookiecutter.stacklight_enabled == 'True' and cookiecutter.stacklight_version == '1' %}
- system.linux.system.repo_local.sensu
{%- endif %}
{%- else %}
- system.linux.system.repo.ubuntu
- system.linux.system.repo.mcp.openstack
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.saltstack.xenial
{%- if cookiecutter.stacklight_enabled == 'True' and cookiecutter.stacklight_version == '1' %}
- system.linux.system.repo.sensu
{%- endif %}
{%- endif %}
- system.ceilometer.server.backend.influxdb
- system.heka.ceilometer_collector.single
- system.aodh.server.cluster
- system.ceilometer.server.cluster
- cluster.{{ cookiecutter.cluster_name }}.infra
parameters:
  _param:
    keepalived_openstack_telemetry_vip_address: ${_param:openstack_telemetry_address}
    keepalived_openstack_telemetry_vip_password: ${_param:openstack_telemetry_keepalived_password}
    keepalived_openstack_telemetry_vip_interface: ens3
    cluster_vip_address: ${_param:openstack_telemetry_address}
    cluster_local_address: ${_param:single_address}
    cluster_node01_hostname: ${_param:openstack_telemetry_node01_hostname}
    cluster_node01_address: ${_param:openstack_telemetry_node01_address}
    cluster_node02_hostname: ${_param:openstack_telemetry_node02_hostname}
    cluster_node02_address: ${_param:openstack_telemetry_node02_address}
    cluster_node03_hostname: ${_param:openstack_telemetry_node03_hostname}
    cluster_node03_address: ${_param:openstack_telemetry_node03_address}
  linux:
    network:
      interface:
        ens3: ${_param:linux_single_interface}
