classes:
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.mcp.apt_mirantis.ubuntu
- system.linux.system.repo_local.mcp.apt_mirantis.openstack
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.mcp.apt_mirantis.saltstack
{%- else %}
- system.linux.system.repo.mcp.apt_mirantis.ubuntu
- system.linux.system.repo.mcp.apt_mirantis.saltstack
- system.linux.system.repo.mcp.apt_mirantis.openstack
- system.linux.system.repo.mcp.extra
{%- endif %}
{%- if cookiecutter.get('openstack_nova_compute_nfv_req_enabled', 'False') == 'True' or cookiecutter.get('openstack_nfv_dpdk_enabled', 'False') == 'True' %}
- system.nova.compute.nfv.hugepages
- system.nova.compute.nfv.cpu_pinning
{%- endif %}
- system.nova.compute.cluster
- system.nova.compute.notification.messagingv2
{%- if cookiecutter.stacklight_enabled == 'True' %}
{%- if cookiecutter.openstack_version in ['mitaka', 'newton', 'ocata'] %}
- system.ceilometer.agent.cluster
{%- endif %}
{%- if cookiecutter.stacklight_version == '2' %}
- system.prometheus.exporters.libvirt
{%- endif %}
{%- endif %}
{%- if cookiecutter.openstack_network_engine == 'ovs' %}
- system.neutron.compute.cluster
{%- elif cookiecutter.openstack_network_engine == 'opencontrail' %}
- cluster.{{ cookiecutter.cluster_name }}.opencontrail.compute
{%- endif %}
{%- if cookiecutter.get('ceph_enabled', 'False') == 'True'  %}
{%- if cookiecutter.get('ceph_hyper_converged', 'False') == 'True' %}
- cluster.{{ cookiecutter.cluster_name }}.ceph.osd
{%- endif %}
- system.nova.compute.storage.ceph
- system.ceph.common.cluster
- cluster.{{ cookiecutter.cluster_name }}.ceph.common
{%- endif %}
- system.linux.network.dynamic_hosts
- cluster.{{ cookiecutter.cluster_name }}.infra
{%- if cookiecutter.use_default_network_scheme != 'False' %}
- cluster.{{ cookiecutter.cluster_name }}.openstack.networking.compute
{%- endif %}
parameters:
  _param:
    cluster_vip_address: ${_param:openstack_control_address}
    cluster_local_address: ${_param:single_address}
    cluster_node01_hostname: ${_param:openstack_control_node01_hostname}
    cluster_node01_address: ${_param:openstack_control_node01_address}
    cluster_node02_hostname: ${_param:openstack_control_node02_hostname}
    cluster_node02_address: ${_param:openstack_control_node02_address}
    cluster_node03_hostname: ${_param:openstack_control_node03_hostname}
    cluster_node03_address: ${_param:openstack_control_node03_address}
    nova_vncproxy_url: https://${_param:cluster_public_host}:6080
    primary_first_nic: {{ cookiecutter.compute_primary_first_nic }}
    primary_second_nic: {{ cookiecutter.compute_primary_second_nic }}
{%- set _reserved_mb = cookiecutter.openstack_nova_compute_reserved_host_memory_mb|int + (
    cookiecutter.openstack_nova_compute_reserved_host_memory_mb_stacklight|int
    if cookiecutter.get('stacklight_enabled', 'False') == 'True' else 0) + (
    cookiecutter.openstack_nova_compute_reserved_host_memory_mb_ceph|int
    if cookiecutter.get('ceph_enabled', 'False') == 'True' and (
    cookiecutter.get('ceph_hyper_converged', 'False') == 'True') else 0) %}
  nova:
    compute:
      reserved_host_memory_mb: {{ _reserved_mb }}
{%- if cookiecutter.get('ceph_enabled', 'False') == 'True'  %}
{%- if cookiecutter.get('ceph_hyper_converged', 'False') == 'True' %}
      vcpu_pin_set: {{ cookiecutter.openstack_nova_cpu_pinning }}
  linux:
    system:
      kernel:
        isolcpu: {{ cookiecutter.openstack_nova_cpu_pinning }}
{%- endif %}
{%- endif %}

{%- if cookiecutter.openstack_network_engine == 'ovs' %}
  {%- if cookiecutter.openstack_ovs_encapsulation_type == 'vlan' %}
  neutron:
    compute:
      backend:
        tenant_vlan_range: "${_param:neutron_tenant_vlan_range}"
  {%- endif %}
{%- endif %}
## Best practice configure high speed interface for live migrations
#  nova:
#    libvirt:
#      migration_inbound_addr: ${_param:single_address}
