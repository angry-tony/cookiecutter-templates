{%- macro password(size=16) -%}
{% for index in range(size) %}{{ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'|random }}{% endfor %}
{%- endmacro %}
classes:
  - system.linux.system.haveged
  {%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
  - system.linux.system.repo_local.mcp.apt_mirantis.ubuntu
  - system.linux.system.repo_local.mcp.apt_mirantis.glusterfs
  - system.linux.system.repo_local.mcp.apt_mirantis.docker
  - system.linux.system.repo_local.mcp.salt
  - system.linux.system.repo_local.mcp.extra
  {%- else %}
  - system.linux.system.repo.mcp.apt_mirantis.ubuntu
  - system.linux.system.repo.mcp.apt_mirantis.glusterfs
  - system.linux.system.repo.mcp.apt_mirantis.docker
  - system.linux.system.repo.mcp.salt
  - system.linux.system.repo.mcp.extra
  {%- endif %}
  - system.glusterfs.client.cluster
  - system.glusterfs.client.volume.aptly
  - system.glusterfs.client.volume.gerrit
  - system.glusterfs.client.volume.jenkins
  - system.glusterfs.client.volume.registry
  - system.glusterfs.client.volume.salt_pki
  - system.glusterfs.client.volume.mysql
  {%- if cookiecutter.openldap_enabled == 'True' %}
  - system.glusterfs.client.volume.openldap
  {%- endif %}
 #- system.glusterfs.client.volume.salt
  # Docker
  - system.docker.host

  # Generate aptly-publisher config to use for jenkins slaves
  - system.aptly.client.publisher

  # Keepalived
  - system.keepalived.cluster.instance.cicd_control_vip

  # HAProxy
  - system.salt.minion.cert.proxy.cicd
  - system.haproxy.proxy.single
  - system.haproxy.proxy.listen.cicd.aptly
  - system.haproxy.proxy.listen.cicd.gerrit
  - system.haproxy.proxy.listen.cicd.jenkins
  - system.haproxy.proxy.listen.docker.registry
  - system.haproxy.proxy.listen.docker.visualizer
  {%- if cookiecutter.openldap_enabled == 'True' %}
  - system.haproxy.proxy.listen.openldap
  - system.haproxy.proxy.listen.phpldapadmin
  {%- endif %}
  - system.haproxy.proxy.listen.mysql
  - system.haproxy.proxy.listen.stats
parameters:
  _param:
    apt_mk_version: {{ cookiecutter.mcp_version }}
    admin_email: root@localhost
    cluster_node01_name: ${_param:cicd_control_node01_hostname}
    cluster_node01_address: ${_param:cicd_control_node01_address}
    cluster_node02_name: ${_param:cicd_control_node02_hostname}
    cluster_node02_address: ${_param:cicd_control_node02_address}
    cluster_node03_name: ${_param:cicd_control_node03_hostname}
    cluster_node03_address: ${_param:cicd_control_node03_address}
    glusterfs_node01_address: ${_param:infra_kvm_node01_address}
    glusterfs_node02_address: ${_param:infra_kvm_node02_address}
    glusterfs_node03_address: ${_param:infra_kvm_node03_address}
    keepalived_vip_virtual_router_id: 180
    keepalived_vip_password: {{ password(16) }}
    keepalived_vip_interface: ens3
    cluster_vip_address: ${_param:control_vip_address}
    control_vip_address: ${_param:cicd_control_address}
    salt_api_password: {{ cookiecutter.salt_api_password }}
    jenkins_slave_user_id: 10000
    jenkins_slave_group_id: ${_param:jenkins_slave_user_id}
    # Docker images and versions
    docker_registry_http_secret: {{ password(16) }}
    # CI/CD service databases
    mysql_admin_password: {{ password(16) }}
    mysql_gerrit_password: {{ password(16) }}
    nginx_proxy_gerrit_server_site_host: ${_param:cluster_public_host}
    nginx_proxy_gerrit_server_site_port: 8070
    gerrit_http_listen_url: proxy-https://*:8080/
    {%- if cookiecutter.get('local_pipelines', 'False') == 'True' %}
    gerrit_pipeline_library_repo: http://${_param:aptly_server_hostname}:8088/pipeline-library.git
    gerrit_mk_pipelines_repo: http://${_param:aptly_server_hostname}:8088/mk-pipelines.git
    {%- endif %}
    {%- if cookiecutter.upstream_proxy_enabled == 'True' %}
    http_proxy: 'http://${_param:infra_config_deploy_address}:8000'
    {%- endif %}

    # Proxy
    cluster_ssl_certificate:
      enabled: true
      pem_file: /etc/haproxy/ssl/${_param:cluster_public_host}-all.pem
    haproxy_bind_address: ${_param:cluster_vip_address}
    haproxy_mysql_source_port: 13306
  {%- if cookiecutter.get('local_docker_images', 'False') == 'True' %}
  aptly:
    publisher:
      source:
        image: ${_param:aptly_server_hostname}:5000/aptly-publisher
  docker:
    host:
      insecure_registries:
        - ${_param:aptly_server_hostname}:5000
  {%- endif %}
  linux:
    system:
      package:
        ca-certificates-java:
          version: latest
      directory:
         /var/lib/jenkins/:
            user: ${_param:jenkins_slave_user_id}
            group: ${_param:jenkins_slave_group_id}
    network:
      interface:
        {%- if cookiecutter.get('static_ips_on_deploy_network_enabled', 'False') == 'True' %}
        ens2: ${_param:linux_deploy_interface}
        {%- endif %}
        ens3: ${_param:linux_single_interface}

